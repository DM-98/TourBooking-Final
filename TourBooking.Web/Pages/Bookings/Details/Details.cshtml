@page "/{handle}/booking/{id}"

@model DetailsModel

@{
    ViewData[Globals.Title] = Globals.TitleBookingDetails;
    ViewData[Globals.CurrentPage] = Globals.PageBookings;
}

@if (Model.Booking is null)
{
    <p>Failed to fetch the booking.</p>
}
else
{
    if ((User.Identity?.IsAuthenticated ?? false) || (TempData[Globals.IsAuthenticatedViaEmail] is not null))
    {
        <div class="container-fluid p-3 mb-3 border bg-white col-xs-12 col-sm-10 col-md-8 col-lg-6 col-xxl-4">
            <h4 class="text-center">Communication</h4>

            <hr />

            @if (Model.Booking.Messages?.Any() ?? false)
            {
                <div class="accordion">
                    <div class="accordion-item">
                        <a class="btn btn-outline-light accordion-button collapsed border bg-light" data-bs-toggle="collapse" data-bs-target="#collapse">Show all messages</a>
                        <div class="collapse" id="collapse">
                            @foreach (var message in Model.Booking.Messages.OrderByDescending(x => x.CreatedDate))
                            {
                                <div class="card mb-2 bg-light">
                                    <div class="card-body">
                                        <h5 class="card-title"><b>@message.ApplicationUser.UserName</b></h5>
                                        <h6 class="card-subtitle mb-2 text-muted">@message.CreatedDate.FormatTime()</h6>

                                        <hr />

                                        <p class="card-text">@message.Content</p>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }
            else
            {
                <p><i>No messages</i></p>
            }

            <a href="/@Model.Company!.Handle/booking/@Model.Booking.Id/@Globals.PageWriteANewMessage" class="btn btn-company mt-2 w-100 @(User.Identity?.IsAuthenticated ?? false ? string.Empty : "disabled")">@(User.Identity?.IsAuthenticated ?? false ? "Write a new message" : "Login to write a message")</a>

            <hr />

            <h4 class="text-center">Booking details</h4>
            <p class="text-center"><small>Last changes: @(Model.Booking.UpdatedDate > Model.Booking.UpdatedDate ? Model.Booking.UpdatedDate.FormatTime() : Model.Booking.UpdatedDate.FormatTime())</small></p>

            <hr />

            <b>Status: </b> <p class="fw-bold" style="color: @(Model.Booking.BookingStatus == BookingStatus.Active ? "green" : "#990000")">@Model.Booking.BookingStatus.EnumToString()</p>
            <b>Desired date and time: </b> <p>@Model.Booking.DateTime.FormatTime()</p>
            <b>Alternative date and time: </b> <p>@(Model.Booking.AlternativeDateTime.HasValue ? Model.Booking.AlternativeDateTime.FormatTime() : Html.Raw("<i>N/A</i>"))</p>
            <b>Chosen package / location: </b>
            <ul>
                <li><b>Package:</b> @Model.Booking.PackageName</li>
                <li><b>Description:</b> @Model.Booking.PackageDescription</li>
                <li><b>Location:</b> @(Model.Booking.StreetName) @Model.Booking.ZipCode @Model.Booking.City</li>
            </ul>
            <b>Borrowed materials during tour:</b>
            <ul>
                @if (Model.Booking.Materials?.Any() ?? false)
                {
                    @foreach (var material in Model.Booking.Materials)
                    {
                        <li>@material.Name</li>
                    }
                }
                else
                {
                    <li><i>None</i></li>
                }
            </ul>
            <b>Attendees: </b> <p>@Model.Booking.Attendees</p>
            <b>Remark: </b> <p>@(string.IsNullOrWhiteSpace(Model.Booking.Remark) ? Html.Raw("<i>None</i>") : Model.Booking.Remark)</p>

            @if (User.IsInRole(RoleType.Employee.ToString()) || User.IsInRole(RoleType.Admin.ToString()))
            {
                <hr />

                <b>Booker's organization: </b> <p>@Model.Booking.Organization</p>
                <b>Booker's name': </b> <p>@Model.Booking.BookersName</p>
                <b>Booker's email': </b> <p>@Model.Booking.BookersEmail</p>
                <b>Booker's phone number': </b> <p>@(string.IsNullOrWhiteSpace(Model.Booking.BookersPhoneNumber) ? Html.Raw("<i>N/A</i>") : Model.Booking.BookersPhoneNumber)</p>
            }

            <hr />

            <div class="row p-3 gap-2">
                @if (Model.Booking.BookingStatus == BookingStatus.Active)
                {
                    <button data-bs-toggle="modal" data-bs-target="#toggleCancelBookingModal" class="btn btn-danger w-100 mb-2">Cancel booking</button>
                }

                @if (Model.Booking.BookingStatus == BookingStatus.Closed && User.IsInRole(RoleType.Admin.ToString()))
                {
                    <button data-bs-toggle="modal" data-bs-target="#toggleReopenBookingModal" class="btn btn-company w-100 mb-2">Re-open booking</button>
                }

                @if (User.IsInRole("nomi4s") || User.IsInRole(RoleType.Admin.ToString()))
                {
                    <a href="/@Model.Company.Handle/booking/@Model.Booking.Id/rediger" class="btn btn-company w-100 col">Edit</a>
                }

                @if (User.Identity?.IsAuthenticated ?? false)
                {
                    <a href="/@Model.Company.Handle/@Globals.PageBookings" class="btn btn-secondary w-100 col">Back</a>
                }

                <div class="modal fade" id="toggleCancelBookingModal" tabindex="-1" aria-labelledby="toggleCancelBookingModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title">Cancel the booking?</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                Are you sure you want to cancel the booking?
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                <form method="post" asp-page-handler="CancelBooking" asp-route-handle="@Model.Company.Handle" asp-route-bookingId="@Model.Booking.Id">
                                    <button type="submit" class="btn btn-danger" data-bs-dismiss="modal">Cancel booking</button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="modal fade" id="toggleReopenBookingModal" tabindex="-1" aria-labelledby="toggleReopenBookingModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title">Re-open the booking?</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                Are you sure you want to re-open the booking??
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                <form method="post" asp-page-handler="ReopenBooking" asp-route-bookingId="@Model.Booking.Id">
                                    <button type="submit" class="btn btn-company" data-bs-dismiss="modal">Re-open booking</button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}